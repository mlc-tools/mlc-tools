image: Visual Studio 2017   # на этом VM-образе установлены все Visual Studio с 2008 по 2015

init:
    # секция инициализации, исполняется до клонирования проекта
    # скорее всего, строчка ниже необязательна (так должно быть по умолчанию),
    # вместе с тем, она присутствует в официальных примерах, так что пусть будет:
    - git config --global core.autocrlf input

clone_folder: c:\projects\mlcgen # выбираем локальную директорию для клонирования
shallow_clone: true              # копируем только последний коммит, без истории (git clone --depth 1)

matrix:
    fast_finish: false           # не останавливаемся после возникновения ошибки в каком-то из заданий

platform:
    # будем гонять CI на amd64 и x86...
    - x86

configuration:
    - Debug
    - Release

environment:
    matrix:
        - TOOLCHAIN: msvc17

install:

build_script:
    # скрипт сборки проекта:
    - python mlc_tools/main.py -i tests/simple_test/config -o tests/simple_test/generated_cpp/xml -f xml -l cpp -side server -data tests/simple_test/data_xml -data_out tests/simple_test/assets
    - python mlc_tools/main.py -i tests/simple_test/config -o tests/simple_test/generated_cpp/json -f json -l cpp -side client -data tests/simple_test/data_json -data_out tests/simple_test/assets
    - cd tests/simple_test
    - mkdir build
    - cd build
    - cmake .. %CMAKE_CONFIGURE_FLAGS% -DBUILD_XML=ON -DBUILD_JSON=OFF -DBUILD_SIDE=SERVER 
    - MSBuild test_mlc_xml.sln /p:Configuration=%CONFIGURATION% /p:Platform=win32

    - cmake .. %CMAKE_CONFIGURE_FLAGS% -DBUILD_XML=OFF -DBUILD_JSON=ON -DBUILD_SIDE=CLIENT
    - MSBuild test_mlc_json.sln /p:Configuration=%CONFIGURATION% /p:Platform=win32


test_script:
    # скрипт тестирования проекта:
    - cd %CONFIGURATION%
    - test_mlc_xml.exe
    - test_mlc_json.exe

# artifacts:
#     - path: <local-package-path>
#       name: package_name

# deploy:
#     # выкладываем tagged-коммиты на GitHub Releases:
#     description: '$(APPVEYOR_REPO_TAG_NAME)'
#     provider: GitHub

#     auth_token:
#         secure: <encrypted-github-token>

#     artifact: package_name
#     force_update: true

#     on:
#         appveyor_repo_tag: true