class Intrusive:cpp:py
{
    function void add_self_to_list(list<Intrusive*>:ref list)
    {
        auto r = this;
        list_push(list, r);
    }
    function void remove_self_from_list(list<Intrusive*>:ref list)
    {
        auto r = this;
        list_remove(list, r);
    }
}

class TestIntrusive<ITestIntrusive>:cpp:py
{
    list<Intrusive*> pointers
    function void test_add_self_to_list()
    {
        auto a = new Intrusive();
        auto b = new Intrusive();
        auto c = new Intrusive();

        list_push(this->pointers, a);
        list_push(this->pointers, nullptr);
        b->add_self_to_list(this->pointers);
        c->add_self_to_list(this->pointers);
        this->assertEqual(list_size(this->pointers), 4, "list size == 4");

        c->remove_self_from_list(this->pointers);
        list_remove(this->pointers, a);
        list_remove(this->pointers, nullptr);

        this->assertEqual(list_size(this->pointers), 1, "list size == 1");
    }
    function void test_remove_self_from_list(){}
}