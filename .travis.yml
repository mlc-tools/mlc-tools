sudo: required

language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

env:
  - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
  - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release
  - TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
  - TARGET_CPU=x86 BUILD_CONFIGURATION=Release

before_install:
  # C++14
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -qq; fi
install: 
  # C++14
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -qq g++-5; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90; fi

matrix:
  exclude:
    - os:       osx
      compiler: gcc

    - os:  osx
      env: TARGET_CPU=x86 BUILD_CONFIGURATION=Debug

    - os:  osx
      env: TARGET_CPU=x86 BUILD_CONFIGURATION=Release


script:
  # simple test:

  - pushd .
  - python mlc_tools/main.py -i tests/simple_test/config -o tests/simple_test/generated_cpp/xml -f xml -l cpp -side server -data tests/simple_test/data_xml -data_out tests/simple_test/assets
  - python mlc_tools/main.py -i tests/simple_test/config -o tests/simple_test/generated_cpp/json -f json -l cpp -side client -data tests/simple_test/data_json -data_out tests/simple_test/assets
  
  - cd tests/simple_test

  - mkdir build_xml
  - cd build_xml
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=ON -DBUILD_JSON=OFF -DBUILD_SIDE=SERVER 
  - make
  - ./test_mlc_xml ../
  - cd ..

  - mkdir build_json
  - cd build_json
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=OFF -DBUILD_JSON=ON -DBUILD_SIDE=CLIENT
  - cmake --build .
  - ./test_mlc_json ../
  - cd ..
  - popd

  # test serialize:
  - pushd .
  - cd tests/test_serialize
  - python run.py
  - popd