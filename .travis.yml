sudo: required

language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

env:
  - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
  - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release
  - TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
  - TARGET_CPU=x86 BUILD_CONFIGURATION=Release

before_install:
  # C++14
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -qq; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt install python3-pip; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install python3; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew postinstall python3; fi
install:
  # C++14
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -qq g++-7; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 90; fi
  # - pip3 install enum --user
  - sudo -H pip3 install six --upgrade
  - pip3 install --user --upgrade setuptools wheel
  - pip3 install --user --upgrade twine

matrix:
  exclude:
    - os:       osx
      compiler: gcc

    - os:  osx
      env: TARGET_CPU=x86 BUILD_CONFIGURATION=Debug

    - os:  osx
      env: TARGET_CPU=x86 BUILD_CONFIGURATION=Release


script:

  # unit tests
  - pushd .
  - cd unit_tests
  - python3 -m unittest discover
  - popd

  # simple test:

  - pushd .
  - python3 -m mlc_tools.main -i tests/simple_test/config -o tests/simple_test/generated_cpp/xml -f xml -l cpp -side server -data tests/simple_test/data_xml -data_out tests/simple_test/assets -generate_tests yes -add_config tests/simple_test/config_additional -add_data tests/simple_test/data_additional -auto_registration no
  - python3 -m mlc_tools.main -i tests/simple_test/config -o tests/simple_test/generated_cpp/json -f json -l cpp -side client -data tests/simple_test/data_json -data_out tests/simple_test/assets -generate_tests yes -add_config tests/simple_test/config_additional -add_data tests/simple_test/data_additional -auto_registration no

  - cd tests/simple_test

  - mkdir build_xml
  - cd build_xml
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=ON -DBUILD_JSON=OFF -DBUILD_SIDE=SERVER
  - cmake --build .
  - ./test_mlc_xml ../
  - cd ..

  - mkdir build_json
  - cd build_json
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=OFF -DBUILD_JSON=ON -DBUILD_SIDE=CLIENT
  - cmake --build .
  - ./test_mlc_json ../
  - cd ..
  - popd

  # test functions:

  - pushd .
  - python3 -m mlc_tools.main -i tests/test_functions/config -o tests/test_functions/generated_cpp/xml -f xml -l cpp -generate_tests yes
  - python3 -m mlc_tools.main -i tests/test_functions/config -o tests/test_functions/generated_cpp/json -f json -l cpp -generate_tests yes

  - cd tests/test_functions

  - mkdir build_xml
  - cd build_xml
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=ON -DBUILD_JSON=OFF
  - cmake --build .
  - ./test_mlc_xml ../
  - cd ..

  - mkdir build_json
  - cd build_json
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=OFF -DBUILD_JSON=ON
  - cmake --build .
  - ./test_mlc_json ../
  - cd ..
  - popd

  # test virtual methods:

  - pushd .
  - python3 -m mlc_tools.main -i tests/test_virtual_methods -o tests/test_virtual_methods/generated_cpp/xml -f xml -l cpp -generate_tests yes
  - python3 -m mlc_tools.main -i tests/test_virtual_methods -o tests/test_virtual_methods/generated_cpp/json -f json -l cpp -generate_tests yes

  - cd tests/test_virtual_methods

  - mkdir build_xml
  - cd build_xml
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=ON -DBUILD_JSON=OFF
  - cmake --build .
  - ./test_mlc_xml ../
  - cd ..

  - mkdir build_json
  - cd build_json
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=OFF -DBUILD_JSON=ON
  - cmake --build .
  - ./test_mlc_json ../
  - cd ..
  - popd

  # test unit tests generator:

  - pushd .
  - python3 -m mlc_tools.main -i tests/unit_tests_generator -o tests/unit_tests_generator/generated_cpp/xml -f xml -l cpp -generate_tests yes
  - python3 -m mlc_tools.main -i tests/unit_tests_generator -o tests/unit_tests_generator/generated_cpp/json -f json -l cpp -generate_tests yes

  - cd tests/unit_tests_generator

  - mkdir build_xml
  - cd build_xml
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=ON -DBUILD_JSON=OFF
  - cmake --build .
  - ./test_mlc_xml ../
  - cd ..

  - mkdir build_json
  - cd build_json
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_CONFIGURATION -DTARGET_CPU=$TARGET_CPU -DBUILD_XML=OFF -DBUILD_JSON=ON
  - cmake --build .
  - ./test_mlc_json ../
  - cd ..
  - popd

  # test serialize:
  - pushd .
  - cd tests/test_serialize
  - python3 run.py
  - popd
